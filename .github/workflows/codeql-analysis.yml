# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL, with security check using SNYK"

on:
  push:
    branches: [ main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]
  schedule:
    - cron: '17 16 * * 6'

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.9@v3
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
        

  analyze:
    name: Analyze
    # CodeQL runs on ubuntu-latest, windows-latest, and macos-latest
    runs-on: ubuntu-latest

    permissions:
      # required for all workflows
      security-events: write

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        
        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality


    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # Removed this part, using interpreted language Python
    # If this step fails, then you should remove it and run the build manually (see below)
    #- name: Autobuild
    #  uses: github/codeql-action/autobuild@v2

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines. 
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #   echo "Run, Build Application using script"
    #   ./location_of_script_within_repo/buildscript.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    - name: Python Code Quality and Lint
      # You may pin to the exact commit or the version.
      # uses: ricardochaves/python-lint@32032eca67291cd71f88d79e61bc4b904ee03265
      uses: ricardochaves/python-lint@v1.3.0
      with:
        # A list of all paths to test
        python-root-list: # optional, default is .
        # Use Pylint
        use-pylint: # optional, default is true
        # Use pycodestyle
        use-pycodestyle: # optional, default is true
        # Use Flake8
        use-flake8: # optional, default is true
        # Use Black
        use-black: # optional, default is true
        # Use mypy
        use-mypy: # optional, default is true
        # Use isort
        use-isort: # optional, default is true
        # Extra options: pylint $(extra-pylint-options) $(python-root-list)
        extra-pylint-options: # optional, default is 
        # Extra options: pycodestyle $(extra-pycodestyle-options) $(python-root-list)
        extra-pycodestyle-options: # optional, default is 
        # Extra options: flake8 $(extra-flake8-options) $(python-root-list)
        extra-flake8-options: # optional, default is 
        # Extra options: black --check $(extra-black-options) $(python-root-list)
        extra-black-options: # optional, default is 
        # Extra options: mypy $(extra-mypy-options) $(python-root-list)
        extra-mypy-options: # optional, default is 
        # Extra options: isort -rc $(extra-isort-options) $(python-root-list) -c --diff 
        extra-isort-options: # optional, default is 
    
